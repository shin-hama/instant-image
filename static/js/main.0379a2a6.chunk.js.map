{"version":3,"sources":["contexts/PasteDataProvider.tsx","contexts/StageRefProvider.tsx","contexts/TextEditorProvider.tsx","features/canvas/components/TextBlock.tsx","features/config/contexts/LineConfigProvider.tsx","features/config/contexts/ShapeConfigProvider.tsx","features/canvas/contexts/ShapesProvider.tsx","features/canvas/components/UploadButton.tsx","features/canvas/hooks/useImageLoader.tsx","features/canvas/components/Canvas.tsx","features/config/hooks/useCanvasSize.ts","features/config/components/ColorPicker.tsx","features/config/components/LineConfig.tsx","features/config/components/ShapeConfig.tsx","features/config/components/ConfigEditor.tsx","features/config/contexts/ConfigEditorProvider.tsx","features/canvas/components/Navbar.tsx","pages/Root.tsx","features/config/contexts/ConfigProvider.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["PasteData","React","undefined","PasteDataProvider","children","pasteData","setPasteData","handlePaste","e","clipboardData","files","length","file","getData","document","addEventListener","removeEventListener","Provider","value","StageRef","StageRefProvider","stageRef","StyledInputElement","styled","theme","width","fontSize","fontWeight","lineHeight","background","borderRadius","padding","transition","border","outline","palette","grey","TextEditorContext","Promise","resolve","msg","console","log","TextEditorProvider","setValue","pos","x","y","options","setOptions","resolveReject","setResolveReject","reject","edit","args","prev","handleClose","handleCancel","inputRef","handleComplete","current","getBoundingClientRect","style","position","left","top","InputUnstyled","autoFocus","placeholder","onChange","event","target","onKeyDown","key","onBlur","components","Input","TextBlock","point","defaultValue","useTheme","text","fontFamily","typography","draggable","onDblClick","textPos","absolutePosition","getStage","container","offsetLeft","offsetTop","hide","then","result","catch","finally","show","onClick","evt","preventDefault","LineConfigContext","SetLineConfigContext","LineConfigProvider","stroke","strokeWidth","config","setConfig","useLineConfig","Error","ShapeConfigContext","SetShapeConfigContext","ShapeConfigProvider","useShapeConfig","ShapesContext","ShapesActionsContext","ShapesProvider","useList","shapes","actions","useShapes","UploadButton","windowSize","useWindowSize","loadImage","height","maxWidth","setMaxWidth","maxHeight","setMaxHeight","handleLoad","src","a","img","window","Image","onload","onerror","pushImage","image","size","push","url","URL","createObjectURL","revokeObjectURL","useImageLoader","Fab","color","component","sx","bottom","right","icon","faPlus","accept","multiple","id","type","display","Array","from","forEach","CreateShape","shape","p1","p2","lineConfig","optionalConfig","handleTransformEnd","node","scaleX","scaleY","center","radius","Math","abs","radiusX","radiusY","fill","onTransformEnd","leftTop","min","widthHeight","points","PasteObject","data","File","startsWith","reader","FileReader","toString","error","readAsDataURL","Canvas","shapeType","ShapeTypeContext","newShape","setNewShape","start","setStart","shapesActions","freePoints","setFreePoints","absPos","setAbsPos","transformerRef","drawing","setDrawing","shapeConfig","canvasSize","stageWidth","stageHeight","setCanvasSize","toolbarHeight","Number","parseInt","mixins","toolbar","minHeight","useCanvasSize","obj","func","startDrawing","client","handleMouseDown","getPointerPosition","clientX","clientY","handleTouchStart","touches","handleMouseMove","handleMouseUp","line","mode","DrawFreeLine","setBackground","rect","listening","centerLine","handleClick","nodes","testRef","Consumer","ref","onMouseDown","onTouchStart","onDragStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","onTap","clipX","clipY","clipWidth","clipHeight","toArray","map","item","ColorPicker","setColor","Stack","spacing","Typography","onChangeComplete","hex","LineConfigEditor","setWidth","direction","FormControl","InputLabel","Select","labelId","label","MenuItem","ShapeConfigEditor","Editors","Line","LineConfig","Shape","ShapeConfig","TransparentFab","boxShadow","backgroundColor","ConfigEditor","editor","onClose","Drawer","open","Boolean","anchor","variant","Toolbar","Box","margin","disableRipple","disableFocusRipple","disableTouchRipple","faTimes","ConfigEditorContext","ConfigEditorProvider","configEditor","setConfigEditor","FlexDiv","flexGrow","Navbar","setShapeType","useConfigEditor","AppBar","zIndex","drawer","Button","dataUrl","toDataURL","link","createElement","download","href","body","appendChild","click","removeChild","Root","setHeight","canvasBoxRef","clientWidth","clientHeight","flexFlow","flex","Grid","xs","onCopy","onPaste","ConfigProvider","customTheme","createTheme","App","ThemeProvider","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0379a2a6.chunk.js","sourcesContent":["import * as React from 'react'\n\ntype PasteDataProps = string | File | undefined\nexport const PasteData = React.createContext<PasteDataProps>(undefined)\n\nexport const PasteDataProvider: React.FC = ({ children }) => {\n  const [pasteData, setPasteData] = React.useState<string | File>()\n  const handlePaste = (e: ClipboardEvent) => {\n    if (e.clipboardData === null) {\n      return\n    }\n\n    if (e.clipboardData.files.length > 0) {\n      const file = e.clipboardData.files[0]\n      setPasteData(file)\n    } else {\n      setPasteData(e.clipboardData.getData('Text'))\n    }\n  }\n\n  React.useEffect(() => {\n    document.addEventListener('paste', handlePaste)\n\n    return () => {\n      document.removeEventListener('paste', handlePaste)\n    }\n  }, [])\n\n  return <PasteData.Provider value={pasteData}>{children}</PasteData.Provider>\n}\n","import Konva from 'konva'\nimport * as React from 'react'\n\ntype StageRefProps = React.RefObject<Konva.Stage> | undefined\nexport const StageRef = React.createContext<StageRefProps>(undefined)\n\nexport const StageRefProvider: React.FC = ({ children }) => {\n  const stageRef = React.useRef<Konva.Stage>(null)\n\n  return <StageRef.Provider value={stageRef}>{children}</StageRef.Provider>\n}\n","import * as React from 'react'\n// import TextField from '@mui/material/TextField'\nimport InputUnstyled from '@mui/base/InputUnstyled'\nimport { styled } from '@mui/system'\nimport { Vector2d } from 'konva/lib/types'\n\nconst StyledInputElement = styled('input')(({ theme }) => ({\n  width: '320px',\n  fontSize: 20,\n  fontWeight: 400,\n  lineHeight: 0,\n  background: 'transparent',\n  borderRadius: '0px',\n  padding: '0px',\n  transition: 'all 150ms ease',\n  border: 'none',\n\n  '&:focus': {\n    outline: 'none',\n    border: `1px solid ${theme.palette.grey[900]}`,\n    borderRadius: '0px',\n  },\n}))\n\ntype EditorOptions = {\n  pos: Vector2d\n  value: string\n}\n\nexport const TextEditorContext = React.createContext<\n  (args: EditorOptions) => Promise<string>\n>(() => {\n  return new Promise<string>((resolve) => {\n    const msg = 'not implemented'\n    console.log(msg)\n    resolve(msg)\n  })\n})\n\nconst initOptions = () => ({\n  pos: { x: 0, y: 0 },\n  value: '',\n})\n\nexport const TextEditorProvider: React.FC = ({ children }) => {\n  const [value, setValue] = React.useState('default')\n  const [options, setOptions] = React.useState<EditorOptions>(initOptions())\n  const [resolveReject, setResolveReject] = React.useState<\n    ((result: string) => void)[]\n  >([])\n  const [resolve, reject] = resolveReject\n\n  const edit = React.useCallback((args: EditorOptions) => {\n    setOptions((prev) => ({ ...prev, ...args }))\n    return new Promise<string>((resolve, reject) => {\n      setResolveReject([resolve, reject])\n    })\n  }, [])\n\n  React.useEffect(() => {\n    setValue(options.value)\n  }, [options])\n\n  const handleClose = React.useCallback(() => {\n    setResolveReject([])\n    setOptions(initOptions())\n  }, [])\n\n  const handleCancel = React.useCallback(() => {\n    if (reject) {\n      reject(value)\n      handleClose()\n    }\n  }, [reject, handleClose, value])\n\n  const inputRef = React.useRef<HTMLInputElement>()\n  const handleComplete = React.useCallback(() => {\n    console.log(inputRef.current?.getBoundingClientRect())\n    if (resolve) {\n      resolve(value)\n      handleClose()\n    }\n  }, [resolve, value, handleClose])\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.key === 'Enter') {\n      handleComplete()\n    } else if (event.key === 'Escape') {\n      handleCancel()\n    }\n  }\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setValue(event.target.value)\n  }\n\n  const handleBlur = () => {\n    // When focus is out\n    handleComplete()\n  }\n\n  return (\n    <>\n      <TextEditorContext.Provider value={edit}>\n        {children}\n      </TextEditorContext.Provider>\n      {resolveReject.length > 0 && (\n        <div\n          style={{\n            position: 'absolute',\n            left: options.pos.x - 1,\n            top: options.pos.y - 3,\n          }}>\n          <InputUnstyled\n            autoFocus\n            value={value}\n            placeholder=\"Input Text\"\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onBlur={handleBlur}\n            components={{\n              Input: StyledInputElement,\n            }}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n","import * as React from 'react'\nimport { Text } from 'react-konva'\nimport Konva from 'konva'\nimport { KonvaEventObject } from 'konva/lib/Node'\n\nimport { TextEditorContext } from 'contexts/TextEditorProvider'\nimport { useTheme } from '@mui/material/styles'\n\ntype Props = {\n  point: Konva.Vector2d\n  value?: string\n}\nconst TextBlock = ({ point, value: defaultValue = 'default' }: Props) => {\n  const [value, setValue] = React.useState(defaultValue)\n  const edit = React.useContext(TextEditorContext)\n  const theme = useTheme()\n\n  const handleDoubleClick = (event: KonvaEventObject<MouseEvent>) => {\n    const text = event.target\n    const textPos = text.absolutePosition()\n    const pos = {\n      x: textPos.x + (text.getStage()?.container().offsetLeft || 0),\n      y: textPos.y + (text.getStage()?.container().offsetTop || 0),\n    }\n    text.hide()\n    edit({ pos, value })\n      .then((result) => {\n        setValue(result)\n      })\n      .catch((result) => console.log(result))\n      .finally(() => text.show())\n  }\n\n  return (\n    <Text\n      text={value}\n      fontFamily={theme.typography.fontFamily}\n      fontSize={20}\n      {...point}\n      draggable\n      onDblClick={handleDoubleClick}\n      onClick={(e) => e.evt.preventDefault()}\n    />\n  )\n}\n\nexport default TextBlock\n","import * as React from 'react'\nimport Konva from 'konva'\n\nconst LineConfigContext = React.createContext<Konva.LineConfig | null>(null)\nconst SetLineConfigContext = React.createContext<React.Dispatch<\n  React.SetStateAction<Konva.LineConfig>\n> | null>(null)\n\nexport const LineConfigProvider: React.FC = ({ children }) => {\n  const [config, setConfig] = React.useState<Konva.LineConfig>({\n    stroke: 'black',\n    strokeWidth: 1,\n  })\n\n  return (\n    <LineConfigContext.Provider value={config}>\n      <SetLineConfigContext.Provider value={setConfig}>\n        {children}\n      </SetLineConfigContext.Provider>\n    </LineConfigContext.Provider>\n  )\n}\n\nexport const useLineConfig = () => {\n  const config = React.useContext(LineConfigContext)\n  const setConfig = React.useContext(SetLineConfigContext)\n\n  if (config === null || setConfig === null) {\n    throw new Error('LineConfigProvider is not wrapped')\n  }\n\n  return [config, setConfig] as const\n}\n","import * as React from 'react'\nimport Konva from 'konva'\n\nconst ShapeConfigContext = React.createContext<Konva.ShapeConfig | null>(null)\nconst SetShapeConfigContext = React.createContext<React.Dispatch<\n  React.SetStateAction<Konva.ShapeConfig>\n> | null>(null)\n\nexport const ShapeConfigProvider: React.FC = ({ children }) => {\n  const [config, setConfig] = React.useState<Konva.ShapeConfig>({})\n\n  return (\n    <ShapeConfigContext.Provider value={config}>\n      <SetShapeConfigContext.Provider value={setConfig}>\n        {children}\n      </SetShapeConfigContext.Provider>\n    </ShapeConfigContext.Provider>\n  )\n}\n\nexport const useShapeConfig = () => {\n  const config = React.useContext(ShapeConfigContext)\n  const setConfig = React.useContext(SetShapeConfigContext)\n\n  if (config === null || setConfig === null) {\n    throw new Error('ShapeConfigProvider is not wrapped')\n  }\n\n  return [config, setConfig] as const\n}\n","import * as React from 'react'\nimport { useList } from 'react-use'\nimport { ListActions } from 'react-use/lib/useList'\n\nconst ShapesContext = React.createContext<React.ReactNodeArray>([])\nconst ShapesActionsContext =\n  React.createContext<ListActions<React.ReactNode> | null>(null)\n\nexport const ShapesProvider: React.FC = ({ children }) => {\n  const [shapes, actions] = useList<React.ReactNode>([])\n\n  return (\n    <ShapesContext.Provider value={shapes}>\n      <ShapesActionsContext.Provider value={actions}>\n        {children}\n      </ShapesActionsContext.Provider>\n    </ShapesContext.Provider>\n  )\n}\n\nexport const useShapes = () => {\n  const shapes = React.useContext(ShapesContext)\n  const actions = React.useContext(ShapesActionsContext)\n\n  if (actions === null) {\n    throw new Error('ShapesContextProvider is not wrapped')\n  }\n\n  return [shapes, actions] as const\n}\n","import * as React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport Fab from '@mui/material/Fab'\nimport { useWindowSize } from 'react-use'\nimport { useImageLoader } from 'features/canvas/hooks/useImageLoader'\n\nconst labelId = 'upload-image-button'\n\nconst UploadButton = () => {\n  const windowSize = useWindowSize()\n  const loadImage = useImageLoader(\n    windowSize.width * 0.6,\n    windowSize.height * 0.6\n  )\n\n  const handleUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(e.target.files || [])\n    if (files.length > 0) {\n      files.forEach((file) => {\n        loadImage(file)\n      })\n    }\n  }\n\n  return (\n    <Fab\n      color=\"primary\"\n      component=\"label\"\n      sx={{ position: 'absolute', bottom: 40, right: 40 }}>\n      <FontAwesomeIcon icon={faPlus} />\n      <input\n        accept=\"image/*\"\n        multiple\n        id={labelId}\n        type=\"file\"\n        style={{ display: 'none' }}\n        onChange={handleUpload}\n      />\n    </Fab>\n  )\n}\n\nexport default UploadButton\n","import * as React from 'react'\nimport { Image as KonvaImage } from 'react-konva'\n\nimport { useShapes } from '../contexts/ShapesProvider'\nimport { useWindowSize } from 'react-use'\n\nexport const useImageLoader = (width: number, height: number) => {\n  const [maxWidth, setMaxWidth] = React.useState(width)\n  const [maxHeight, setMaxHeight] = React.useState(height)\n  const [, actions] = useShapes()\n  const windowSize = useWindowSize()\n\n  React.useEffect(() => {\n    setMaxWidth(width)\n    setMaxHeight(height)\n  }, [width, height])\n\n  const handleLoad = React.useCallback(async (src: string) => {\n    return await new Promise<HTMLImageElement>((resolve, reject) => {\n      const img = new window.Image()\n      img.src = src\n\n      img.onload = () => {\n        resolve(img)\n      }\n      img.onerror = reject\n    })\n  }, [])\n\n  const pushImage = React.useCallback(\n    (image: HTMLImageElement) => {\n      const size = {\n        width: image.width,\n        height: image.height,\n      }\n      // 最大サイズを超えている場合は、はみ出ないサイズに調整\n      if (size.width > maxWidth || size.height > maxHeight) {\n        if (size.width > size.height) {\n          size.height = (maxWidth * size.height) / size.width\n          size.width = maxWidth\n        } else {\n          size.width = (maxHeight * size.width) / size.height\n          size.height = maxHeight\n        }\n      }\n\n      actions.push(\n        <KonvaImage\n          draggable\n          image={image}\n          x={(windowSize.width - maxWidth) / 2}\n          y={(windowSize.height - maxHeight) / 2}\n          width={size.width}\n          height={size.height}\n        />\n      )\n    },\n    [actions, maxHeight, maxWidth, windowSize.height, windowSize.width]\n  )\n\n  const loadImage = React.useCallback(\n    async (file: File) => {\n      const url = URL.createObjectURL(file)\n      if (url) {\n        const image = await handleLoad(url)\n        pushImage(image)\n      }\n      URL.revokeObjectURL(url)\n    },\n    [handleLoad, pushImage]\n  )\n\n  return loadImage\n}\n","import * as React from 'react'\nimport {\n  Group,\n  Stage,\n  Layer,\n  Rect,\n  Line,\n  Ellipse,\n  Image as KonvaImage,\n  Transformer,\n} from 'react-konva'\nimport Konva from 'konva'\n\nimport { ShapeTypeContext } from 'pages/Root'\nimport { PasteData } from 'contexts/PasteDataProvider'\nimport { Vector2d } from 'konva/lib/types'\nimport TextBlock from './TextBlock'\nimport { TextEditorContext } from 'contexts/TextEditorProvider'\nimport { StageRef } from 'contexts/StageRefProvider'\n// import { useWindowSize } from 'features/canvas/hooks/useWindowSize'\nimport { useLineConfig } from 'features/config/contexts/LineConfigProvider'\nimport { useShapeConfig } from 'features/config/contexts/ShapeConfigProvider'\nimport UploadButton from './UploadButton'\nimport { useShapes } from '../contexts/ShapesProvider'\nimport { useCanvasSize } from 'features/config/hooks/useCanvasSize'\n\nconst CreateShape = (\n  shape: string,\n  p1: Vector2d,\n  p2: Vector2d,\n  lineConfig: Konva.ShapeConfig = {},\n  optionalConfig: Konva.ShapeConfig = {}\n) => {\n  const handleTransformEnd = (e: Konva.KonvaEventObject<Event>) => {\n    const node = e.target\n\n    const scaleX = node.scaleX()\n    const scaleY = node.scaleY()\n    node.scaleX(1)\n    node.scaleY(1)\n\n    node.width(node.width() * scaleX)\n    node.height(node.height() * scaleY)\n  }\n\n  const config = {\n    draggable: true,\n    ...optionalConfig,\n  }\n\n  switch (shape) {\n    case 'Circle': {\n      const center = {\n        x: (p1.x + p2.x) / 2,\n        y: (p1.y + p2.y) / 2,\n      }\n      const radius = {\n        x: Math.abs(p1.x - p2.x) / 2,\n        y: Math.abs(p1.y - p2.y) / 2,\n      }\n      return (\n        <Ellipse\n          x={center.x}\n          y={center.y}\n          radiusX={radius.x}\n          radiusY={radius.y}\n          fill=\"gray\"\n          stroke=\"blue\"\n          onTransformEnd={handleTransformEnd}\n          {...lineConfig}\n          {...config}\n        />\n      )\n    }\n    case 'Rect': {\n      const leftTop: Vector2d = {\n        x: Math.min(p1.x, p2.x),\n        y: Math.min(p1.y, p2.y),\n      }\n      const widthHeight: Vector2d = {\n        x: Math.abs(p1.x - p2.x),\n        y: Math.abs(p1.y - p2.y),\n      }\n      return (\n        <Rect\n          x={leftTop.x}\n          y={leftTop.y}\n          width={widthHeight.x}\n          height={widthHeight.y}\n          fill=\"gray\"\n          stroke=\"blue\"\n          onTransformEnd={handleTransformEnd}\n          {...lineConfig}\n          {...config}\n        />\n      )\n    }\n    case 'Line':\n      return (\n        <Line\n          points={[p1.x, p1.y, p2.x, p2.y]}\n          stroke=\"blue\"\n          strokeWidth={4}\n          onTransformEnd={handleTransformEnd}\n          {...lineConfig}\n          {...config}\n        />\n      )\n    default:\n      break\n  }\n}\n\nconst DrawFreeLine = (\n  points: number[],\n  lineConfig: Konva.ShapeConfig,\n  config: Konva.ShapeConfig = {\n    draggable: true,\n  }\n) => {\n  return (\n    <Line\n      points={points}\n      mode=\"source-over\"\n      stroke=\"blue\"\n      strokeWidth={4}\n      {...lineConfig}\n      {...config}\n    />\n  )\n}\n\nconst PasteObject = async (data: string | File) => {\n  if (data instanceof File && data.type.startsWith('image')) {\n    const image = await new Promise<HTMLImageElement>((resolve, reject) => {\n      const reader = new FileReader()\n\n      reader.onload = () => {\n        const img = new Image()\n        img.onload = () => {\n          resolve(img)\n        }\n        img.src = reader.result?.toString() || ''\n      }\n      reader.onerror = (error) => reject(error)\n      reader.readAsDataURL(data)\n    })\n\n    const size = {\n      width: image.width,\n      height: image.height,\n    }\n    // Canvas のサイズを超えている場合は、Canvas をはみ出ないサイズに調整\n    // if (Math.max(size.width, size.height) > CANVAS_SIZE) {\n    //   const ratio = size.width / size.height\n    //   size.width = ratio > 1 ? 1 : ratio\n    //   size.height = ratio > 1 ? 1 / ratio : 1\n    // } else {\n    //   size.width /= CANVAS_SIZE\n    //   size.height /= CANVAS_SIZE\n    // }\n\n    return (\n      <KonvaImage\n        image={image}\n        x={0}\n        y={0}\n        width={size.width}\n        height={size.height}\n      />\n    )\n  }\n}\n\ntype Props = {\n  width: number\n  height: number\n}\nexport const Canvas: React.FC<Props> = ({ width, height }) => {\n  const { shapeType } = React.useContext(ShapeTypeContext)\n  const [newShape, setNewShape] = React.useState<React.ReactNode>()\n  const [start, setStart] = React.useState<Vector2d>({\n    x: 0,\n    y: 0,\n  })\n  const [shapes, shapesActions] = useShapes()\n  const [freePoints, setFreePoints] = React.useState<number[]>([])\n  const pasteData = React.useContext(PasteData)\n  const edit = React.useContext(TextEditorContext)\n  const [absPos, setAbsPos] = React.useState<Vector2d>()\n  const stageRef = React.useContext(StageRef)\n  const transformerRef = React.useRef<Konva.Transformer>(null)\n  const [drawing, setDrawing] = React.useState(false)\n\n  const [lineConfig] = useLineConfig()\n  const [shapeConfig] = useShapeConfig()\n\n  // const windowSize = useWindowSize()\n  const canvasSize = useCanvasSize(width, height)\n\n  React.useEffect(() => {\n    if (pasteData !== undefined) {\n      const func = async () => {\n        const obj = await PasteObject(pasteData)\n        shapesActions.push(obj)\n      }\n      func()\n    }\n  }, [pasteData, shapesActions])\n\n  const startDrawing = (pos: Vector2d, client: Vector2d) => {\n    if (shapeType === 'Text') {\n      setAbsPos({\n        x: client.x,\n        y: client.y,\n      })\n    } else if (shapeType === 'Free') {\n      setFreePoints((prev) => [pos.x, pos.y, pos.x, pos.y])\n    }\n\n    setDrawing(true)\n    setStart(pos)\n  }\n\n  const handleMouseDown = (event: Konva.KonvaEventObject<MouseEvent>) => {\n    const pos = event.target.getStage()?.getPointerPosition()\n    const { clientX, clientY } = event.evt\n    if (pos) {\n      startDrawing(pos, { x: clientX, y: clientY })\n    }\n  }\n  const handleTouchStart = (event: Konva.KonvaEventObject<TouchEvent>) => {\n    const pos = event.target.getStage()?.getPointerPosition()\n    const { clientX, clientY } = event.evt.touches[0]\n    if (pos) {\n      startDrawing(pos, { x: clientX, y: clientY })\n    }\n\n    event.evt.preventDefault()\n  }\n\n  const handleMouseMove = (\n    event: Konva.KonvaEventObject<MouseEvent | TouchEvent>\n  ) => {\n    const pos = event.target.getStage()?.getPointerPosition()\n    if (pos && drawing) {\n      if (shapeType === 'Free') {\n        setFreePoints((prev) => [...prev, pos.x, pos.y])\n        return\n      }\n\n      const shape = CreateShape(shapeType, start, pos, lineConfig, shapeConfig)\n      setNewShape(shape)\n    }\n\n    event.evt.preventDefault()\n  }\n\n  const handleMouseUp = (\n    event: Konva.KonvaEventObject<MouseEvent | TouchEvent>\n  ) => {\n    if (shapeType === 'Text') {\n      if (absPos && stageRef?.current) {\n        edit({\n          pos: absPos,\n          value: '',\n        }).then((result) => {\n          if (result) {\n            const shape = <TextBlock point={start} value={result} />\n            shapesActions.push(shape)\n          }\n        })\n      }\n    }\n    if (newShape) {\n      shapesActions.push(newShape)\n    }\n    setDrawing(false)\n    setNewShape(undefined)\n    setFreePoints([])\n    setStart({ x: 0, y: 0 })\n\n    event.evt.preventDefault()\n  }\n\n  React.useEffect(() => {\n    if (freePoints.length > 0) {\n      const line = DrawFreeLine(freePoints, lineConfig)\n      setNewShape(line)\n    }\n  }, [freePoints, lineConfig])\n\n  const [background, setBackground] = React.useState<React.ReactNode>()\n\n  React.useEffect(() => {\n    const start = {\n      x: 0,\n      y: 0,\n    }\n    const end = {\n      x: width,\n      y: height,\n    }\n    const rect = CreateShape(\n      'Rect',\n      start,\n      end,\n      {},\n      {\n        draggable: false,\n        fill: 'white',\n        stroke: 'transparent',\n        listening: false,\n      }\n    )\n\n    const lineStart = {\n      x: width / 2,\n      y: 0,\n    }\n    const lineEnd = {\n      x: width / 2,\n      y: height,\n    }\n    const centerLine = CreateShape('Line', lineStart, lineEnd, {\n      draggable: false,\n      stroke: 'black',\n      strokeWidth: 1,\n    })\n    setBackground(\n      <Group>\n        {rect}\n        {centerLine}\n      </Group>\n    )\n  }, [width, height])\n\n  const handleClick = (e: Konva.KonvaEventObject<MouseEvent>) => {\n    if (transformerRef.current === null) {\n      return\n    }\n\n    if (shapeType !== 'Select') {\n      return\n    }\n\n    if (e.target === e.target.getStage()) {\n      transformerRef.current.nodes([])\n      return\n    }\n    transformerRef.current.nodes([e.target])\n  }\n\n  const testRef = React.useRef<Konva.Rect>(null)\n  React.useEffect(() => {\n    if (transformerRef.current && testRef.current) {\n      transformerRef.current.nodes([testRef.current])\n    }\n  }, [])\n\n  return (\n    <>\n      <TextEditorContext.Consumer>\n        {(value) => (\n          <Stage\n            ref={stageRef}\n            preventDefault\n            width={width}\n            height={height}\n            onMouseDown={handleMouseDown}\n            onTouchStart={handleTouchStart}\n            // Prevent to create a small shape on dragging is started when set Shape type is not \"select\"\n            onDragStart={() => newShape && setNewShape(undefined)}\n            onMouseMove={handleMouseMove}\n            onTouchMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onTouchEnd={handleMouseUp}\n            onClick={handleClick}\n            onTap={handleClick}>\n            <TextEditorContext.Provider value={value}>\n              <Layer>\n                <Group\n                  clipX={canvasSize.x}\n                  clipY={canvasSize.y}\n                  clipWidth={canvasSize.width}\n                  clipHeight={canvasSize.height}>\n                  {background}\n                  {React.Children.toArray(shapes).map((item) => item)}\n                  {newShape}\n                  <Transformer ref={transformerRef} />\n                </Group>\n              </Layer>\n            </TextEditorContext.Provider>\n          </Stage>\n        )}\n      </TextEditorContext.Consumer>\n      <UploadButton />\n    </>\n  )\n}\n","import * as React from 'react'\n\nimport { useTheme } from '@mui/material/styles'\n\ntype CanvasSize = {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\nexport const useCanvasSize = (\n  stageWidth: number,\n  stageHeight: number\n): CanvasSize => {\n  const theme = useTheme()\n  const [canvasSize, setCanvasSize] = React.useState<CanvasSize>({\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  })\n\n  React.useEffect(() => {\n    const widthHeight = 11 / 21\n    const toolbarHeight = Number.parseInt(\n      theme.mixins.toolbar.minHeight?.toString() || '0'\n    )\n    const height = (stageHeight - toolbarHeight) * 0.9\n    const width = height * widthHeight * 2\n    const x = (stageWidth - width) / 2\n    const y = (stageHeight - height) / 2\n\n    if (width > stageWidth) {\n      console.log('width is over')\n    } else {\n      setCanvasSize({\n        x,\n        y,\n        width,\n        height,\n      })\n    }\n  }, [stageHeight, stageWidth, theme])\n\n  return canvasSize\n}\n","import * as React from 'react'\nimport Stack from '@mui/material/Stack'\nimport Typography from '@mui/material/Typography'\nimport { ColorResult, CirclePicker } from 'react-color'\n\ntype Props = {\n  color: string\n  setColor: React.Dispatch<React.SetStateAction<string>>\n}\nconst ColorPicker: React.FC<Props> = ({ color, setColor }) => {\n  const handleChangeComplete = (\n    color: ColorResult,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setColor(color.hex)\n  }\n\n  return (\n    <Stack spacing={1}>\n      <Typography>Color: {color}</Typography>\n      <CirclePicker color={color} onChangeComplete={handleChangeComplete} />\n    </Stack>\n  )\n}\n\nexport default ColorPicker\n","import * as React from 'react'\nimport FormControl from '@mui/material/FormControl'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport Stack from '@mui/material/Stack'\nimport Typography from '@mui/material/Typography'\n\nimport { useLineConfig } from 'features/config/contexts/LineConfigProvider'\nimport ColorPicker from 'features/config/components/ColorPicker'\n\nconst LineConfigEditor = () => {\n  const [config, setConfig] = useLineConfig()\n  const [color, setColor] = React.useState(\n    config.stroke?.toString() || '#000000'\n  )\n  const [width, setWidth] = React.useState(config.strokeWidth || 1)\n\n  const handleWidthChange = (e: SelectChangeEvent<number>) => {\n    setWidth(e.target.value as number)\n  }\n\n  React.useEffect(() => {\n    setConfig((prev) => ({\n      ...prev,\n      stroke: color,\n      strokeWidth: width,\n    }))\n  }, [color, setConfig, width])\n\n  return (\n    <Stack spacing={2}>\n      <Stack direction=\"row\">\n        <Typography>Width</Typography>\n        <FormControl>\n          <InputLabel id=\"line-width-label\">line</InputLabel>\n          <Select\n            labelId=\"line-width-label\"\n            id=\"line-width\"\n            value={width}\n            label=\"Line\"\n            onChange={handleWidthChange}>\n            {[1, 2, 3, 4, 5, 6, 7, 8].map((item) => (\n              <MenuItem key={item} value={item}>\n                {item}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Stack>\n      <ColorPicker color={color} setColor={setColor} />\n    </Stack>\n  )\n}\n\nexport default LineConfigEditor\n","import * as React from 'react'\nimport Stack from '@mui/material/Stack'\n\nimport { useShapeConfig } from 'features/config/contexts/ShapeConfigProvider'\nimport ColorPicker from 'features/config/components/ColorPicker'\n\nconst ShapeConfigEditor = () => {\n  const [config, setConfig] = useShapeConfig()\n  const [color, setColor] = React.useState(config.fill || '#000000')\n\n  React.useEffect(() => {\n    setConfig((prev) => ({\n      ...prev,\n      fill: color,\n    }))\n  }, [color, setConfig])\n\n  return (\n    <Stack spacing={2}>\n      <ColorPicker color={color} setColor={setColor} />\n    </Stack>\n  )\n}\n\nexport default ShapeConfigEditor\n","import * as React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Drawer from '@mui/material/Drawer'\nimport Fab from '@mui/material/Fab'\nimport Toolbar from '@mui/material/Toolbar'\n\nimport LineConfigEditor from '../components/LineConfig'\nimport ShapeConfigEditor from '../components/ShapeConfig'\n\nconst Editors = {\n  Line: <LineConfigEditor />,\n  Shape: <ShapeConfigEditor />,\n}\nexport type EditorType = keyof typeof Editors\n\nconst TransparentFab = styled(Fab)(({ theme }) => ({\n  position: 'absolute',\n  top: Number.parseInt(theme.mixins.toolbar.minHeight?.toString() || '0') + 8,\n  right: 8,\n  boxShadow: 'none',\n  backgroundColor: 'transparent',\n  '&:hover': {\n    backgroundColor: 'transparent',\n  },\n  '&:active': {\n    boxShadow: 'none',\n  },\n}))\n\ntype Props = {\n  editor?: EditorType\n  onClose: () => void\n}\nconst ConfigEditor: React.FC<Props> = ({ editor, onClose }) => {\n  return (\n    <Drawer\n      open={Boolean(editor)}\n      anchor=\"right\"\n      variant=\"persistent\"\n      onClose={onClose}>\n      <Toolbar />\n      <Box sx={{ margin: 2 }}>{editor ? Editors[editor] : <></>}</Box>\n      <TransparentFab\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        variant=\"extended\"\n        onClick={onClose}>\n        <FontAwesomeIcon icon={faTimes} />\n      </TransparentFab>\n    </Drawer>\n  )\n}\n\nexport default ConfigEditor\n","import * as React from 'react'\n\nimport ConfigEditor, {\n  EditorType,\n} from 'features/config/components/ConfigEditor'\n\nconst ConfigEditorContext = React.createContext<React.Dispatch<\n  React.SetStateAction<EditorType | undefined>\n> | null>(null)\n\nexport const ConfigEditorProvider: React.FC = ({ children }) => {\n  const [configEditor, setConfigEditor] = React.useState<EditorType>()\n\n  const handleClose = () => {\n    setConfigEditor(undefined)\n  }\n  return (\n    <>\n      <ConfigEditorContext.Provider value={setConfigEditor}>\n        {children}\n      </ConfigEditorContext.Provider>\n      <ConfigEditor editor={configEditor} onClose={handleClose} />\n    </>\n  )\n}\n\nexport const useConfigEditor = () => {\n  const setConfigEditor = React.useContext(ConfigEditorContext)\n  if (setConfigEditor === null) {\n    throw new Error('ConfigEditorProvider is not wrapped')\n  }\n\n  return setConfigEditor\n}\n","import * as React from 'react'\nimport { styled } from '@mui/material'\nimport AppBar from '@mui/material/AppBar'\nimport Button from '@mui/material/Button'\nimport FormControl from '@mui/material/FormControl'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport Toolbar from '@mui/material/Toolbar'\n\nimport { ShapeTypeContext } from 'pages/Root'\nimport { StageRef } from 'contexts/StageRefProvider'\nimport { useConfigEditor } from 'features/config/contexts/ConfigEditorProvider'\n\nconst FlexDiv = styled('div')((theme) => ({\n  flexGrow: 1,\n}))\n\nconst Navbar = () => {\n  const { shapeType, setShapeType } = React.useContext(ShapeTypeContext)\n  const handleChange = (event: SelectChangeEvent) => {\n    setShapeType(event.target.value)\n  }\n  const stageRef = React.useContext(StageRef)\n  const handleDownload = () => {\n    if (stageRef?.current) {\n      const dataUrl = stageRef.current.toDataURL()\n      const link = document.createElement('a')\n      link.download = 'stage.png'\n      link.href = dataUrl\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    }\n  }\n\n  const setConfigEditor = useConfigEditor()\n\n  const handleOpenShapeEditor = () => {\n    setConfigEditor('Shape')\n  }\n\n  const handleOpenLineEditor = () => {\n    setConfigEditor('Line')\n  }\n\n  return (\n    <AppBar sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n      <Toolbar>\n        <FormControl>\n          <InputLabel id=\"shape-select-label\">Shape</InputLabel>\n          <Select\n            labelId=\"shape-select-label\"\n            id=\"shape-select\"\n            value={shapeType}\n            label=\"Shape\"\n            onChange={handleChange}>\n            <MenuItem value={'Select'}>Select</MenuItem>\n            <MenuItem value={'Line'}>Line</MenuItem>\n            <MenuItem value={'Free'}>Free Line</MenuItem>\n            <MenuItem value={'Rect'}>Rect</MenuItem>\n            <MenuItem value={'Circle'}>Circle</MenuItem>\n            <MenuItem value={'Text'}>Text</MenuItem>\n          </Select>\n        </FormControl>\n        <FlexDiv />\n        <Button variant=\"contained\" onClick={handleOpenLineEditor}>\n          line\n        </Button>\n        <Button variant=\"contained\" onClick={handleOpenShapeEditor}>\n          shape\n        </Button>\n        <Button onClick={handleDownload} variant=\"contained\">\n          Download\n        </Button>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navbar\n","import * as React from 'react'\nimport Box from '@mui/material/Box'\nimport Grid from '@mui/material/Grid'\nimport Toolbar from '@mui/material/Toolbar'\n\nimport { Canvas } from 'features/canvas/components/Canvas'\nimport Navbar from 'features/canvas/components/Navbar'\nimport { useWindowSize } from 'react-use'\nimport { useTheme } from '@mui/material/styles'\n\ntype ShapeTypeProps = {\n  shapeType: string\n  setShapeType: React.Dispatch<React.SetStateAction<string>>\n}\nexport const ShapeTypeContext = React.createContext<ShapeTypeProps>({\n  shapeType: 'Line',\n  setShapeType: () => {\n    // no run\n  },\n})\n\nconst Root = () => {\n  const [shapeType, setShapeType] = React.useState('Select')\n  const [height, setHeight] = React.useState(0)\n  const [canvasSize, setCanvasSize] = React.useState({ width: 0, height: 0 })\n  const canvasBoxRef = React.useRef<HTMLDivElement>(null)\n  const windowSize = useWindowSize()\n\n  const theme = useTheme()\n\n  React.useEffect(() => {\n    const toolbarHeight = Number.parseInt(\n      theme.mixins.toolbar.minHeight?.toString() || '0'\n    )\n    setHeight(windowSize.height - toolbarHeight)\n  }, [theme.mixins.toolbar.minHeight, windowSize.height])\n\n  React.useEffect(() => {\n    if (!canvasBoxRef.current) {\n      return\n    }\n    setCanvasSize({\n      width: canvasBoxRef.current.clientWidth,\n      height: canvasBoxRef.current.clientHeight,\n    })\n  }, [canvasBoxRef, height])\n\n  return (\n    <Box\n      sx={{\n        background: 'grey',\n        height: '100%',\n        display: 'flex',\n        flexFlow: 'column',\n        flex: 1,\n        position: 'relative',\n      }}>\n      <ShapeTypeContext.Provider value={{ shapeType, setShapeType }}>\n        <Navbar />\n        <Toolbar />\n        <Grid\n          container\n          sx={{\n            flex: '1 1 auto',\n          }}>\n          <Grid item xs={2}>\n            <Box\n              sx={{\n                background: 'white',\n              }}>\n              test\n            </Box>\n          </Grid>\n          <Grid item xs={10}>\n            <Box\n              ref={canvasBoxRef}\n              onCopy={() => console.log('handlePaste')}\n              onPaste={() => console.log('test')}\n              sx={{ height: '100%' }}>\n              <Canvas width={canvasSize.width} height={canvasSize.height} />\n            </Box>\n          </Grid>\n        </Grid>\n        <></>\n      </ShapeTypeContext.Provider>\n    </Box>\n  )\n}\n\nexport default Root\n","import * as React from 'react'\n\nimport { ConfigEditorProvider } from './ConfigEditorProvider'\nimport { LineConfigProvider } from './LineConfigProvider'\nimport { ShapeConfigProvider } from './ShapeConfigProvider'\n\nexport const ConfigProvider: React.FC = ({ children }) => {\n  return (\n    <LineConfigProvider>\n      <ShapeConfigProvider>\n        {/* Config Editor Provider must be wrapped other config provider to use each ConfigProvider's Context in ConfigEditor  */}\n        <ConfigEditorProvider>{children}</ConfigEditorProvider>\n      </ShapeConfigProvider>\n    </LineConfigProvider>\n  )\n}\n","import * as React from 'react'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\n\nimport { PasteDataProvider } from 'contexts/PasteDataProvider'\nimport { StageRefProvider } from 'contexts/StageRefProvider'\nimport { TextEditorProvider } from 'contexts/TextEditorProvider'\nimport Root from 'pages/Root'\nimport { ConfigProvider } from 'features/config/contexts/ConfigProvider'\nimport { ShapesProvider } from 'features/canvas/contexts/ShapesProvider'\n\nconst customTheme = createTheme()\n\nfunction App() {\n  return (\n    <div style={{ height: '100%' }}>\n      <ThemeProvider theme={customTheme}>\n        <PasteDataProvider>\n          <StageRefProvider>\n            <TextEditorProvider>\n              <ConfigProvider>\n                <ShapesProvider>\n                  <Root />\n                </ShapesProvider>\n              </ConfigProvider>\n            </TextEditorProvider>\n          </StageRefProvider>\n        </PasteDataProvider>\n      </ThemeProvider>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}