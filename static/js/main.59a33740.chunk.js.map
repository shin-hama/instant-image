{"version":3,"sources":["contexts/PasteDataProvider.tsx","contexts/StageRefProvider.tsx","contexts/TextEditorProvider.tsx","features/canvas/components/TextBlock.tsx","features/canvas/contexts/ShapeTypeProvider.tsx","features/config/contexts/LineConfigProvider.tsx","features/config/contexts/ShapeConfigProvider.tsx","features/canvas/contexts/ShapesProvider.tsx","features/canvas/components/Canvas.tsx","features/config/components/ColorPicker.tsx","features/config/components/LineConfig.tsx","features/config/components/ShapeConfig.tsx","features/config/components/ConfigEditor.tsx","features/config/contexts/ConfigEditorProvider.tsx","features/canvas/components/Navbar.tsx","features/canvas/components/ToolPanel.tsx","features/canvas/hooks/useImageLoader.tsx","pages/Root.tsx","features/config/hooks/useCanvasSize.ts","features/config/contexts/ConfigProvider.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["PasteData","React","undefined","PasteDataProvider","children","pasteData","setPasteData","handlePaste","e","clipboardData","files","length","file","getData","document","addEventListener","removeEventListener","Provider","value","StageRef","StageRefProvider","stageRef","StyledInputElement","styled","theme","width","fontSize","fontWeight","lineHeight","background","borderRadius","padding","transition","border","outline","palette","grey","TextEditorContext","Promise","resolve","msg","console","log","TextEditorProvider","setValue","pos","x","y","options","setOptions","resolveReject","setResolveReject","reject","edit","args","prev","handleClose","handleCancel","inputRef","handleComplete","current","getBoundingClientRect","style","position","left","top","InputUnstyled","autoFocus","placeholder","onChange","event","target","onKeyDown","key","onBlur","components","Input","TextBlock","point","defaultValue","useTheme","text","fontFamily","typography","draggable","onDblClick","textPos","absolutePosition","getStage","container","offsetLeft","offsetTop","hide","then","result","catch","finally","show","onClick","evt","preventDefault","Shapes","ShapeTypeContext","shapeType","setShapeType","Error","ShapeTypeProvider","LineConfigContext","SetLineConfigContext","LineConfigProvider","stroke","strokeWidth","config","setConfig","useLineConfig","ShapeConfigContext","SetShapeConfigContext","ShapeConfigProvider","useShapeConfig","ShapesContext","ShapesActionsContext","ShapesProvider","useList","shapes","actions","useShapes","CreateShape","shape","p1","p2","lineConfig","optionalConfig","handleTransformEnd","node","scaleX","scaleY","height","center","radius","Math","abs","radiusX","radiusY","fill","onTransformEnd","leftTop","min","widthHeight","points","PasteObject","data","a","File","type","startsWith","reader","FileReader","onload","img","Image","src","toString","onerror","error","readAsDataURL","image","size","Canvas","stageSize","canvasSize","newShape","setNewShape","start","setStart","shapesActions","freePoints","setFreePoints","absPos","setAbsPos","transformerRef","drawing","setDrawing","shapeConfig","obj","push","func","startDrawing","client","handleMouseDown","getPointerPosition","clientX","clientY","handleTouchStart","touches","handleMouseMove","handleMouseUp","line","mode","DrawFreeLine","setBackground","end","rect","listening","lineStart","lineEnd","centerLine","lineJoin","dash","opacity","handleClick","nodes","testRef","flexGrow","Consumer","ref","onMouseDown","onTouchStart","onDragStart","onMouseMove","onTouchMove","onMouseUp","onTouchEnd","onTap","clipX","clipY","clipWidth","clipHeight","toArray","map","item","ColorPicker","color","setColor","Stack","spacing","Typography","onChangeComplete","hex","LineConfigEditor","setWidth","direction","FormControl","InputLabel","id","Select","labelId","label","MenuItem","ShapeConfigEditor","TransparentFab","Fab","Number","parseInt","mixins","toolbar","minHeight","right","boxShadow","backgroundColor","TabPanel","index","role","hidden","aria-labelledby","Box","sx","p","ConfigEditor","open","onClose","Drawer","anchor","variant","Toolbar","Tabs","newValue","Tab","LineConfig","ShapeConfig","disableRipple","disableFocusRipple","disableTouchRipple","icon","faTimes","ConfigEditorContext","ConfigEditorProvider","setOpen","FlexDiv","Navbar","setOpenConfigEditor","setConfigEditor","useConfigEditor","AppBar","zIndex","drawer","Button","dataUrl","toDataURL","link","createElement","download","href","body","appendChild","click","removeChild","ShapePanels","str","currentTarget","some","ToolPanel","openSub","setOpenSub","mainPanelRef","loadImage","handleLoad","window","pushImage","maxHeight","maxWidth","url","URL","createObjectURL","revokeObjectURL","useImageLoader","overflow","component","accept","multiple","display","Array","from","forEach","clientHeight","Root","canvasBoxRef","windowSize","useWindowSize","stage","canvas","setCanvasSize","stageWidth","clientWidth","stageHeight","useCanvasSize","flexDirection","flex","onCopy","onPaste","ConfigProvider","customTheme","createTheme","App","ThemeProvider","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.59a33740.chunk.js","sourcesContent":["import * as React from 'react'\n\ntype PasteDataProps = string | File | undefined\nexport const PasteData = React.createContext<PasteDataProps>(undefined)\n\nexport const PasteDataProvider: React.FC = ({ children }) => {\n  const [pasteData, setPasteData] = React.useState<string | File>()\n  const handlePaste = (e: ClipboardEvent) => {\n    if (e.clipboardData === null) {\n      return\n    }\n\n    if (e.clipboardData.files.length > 0) {\n      const file = e.clipboardData.files[0]\n      setPasteData(file)\n    } else {\n      setPasteData(e.clipboardData.getData('Text'))\n    }\n  }\n\n  React.useEffect(() => {\n    document.addEventListener('paste', handlePaste)\n\n    return () => {\n      document.removeEventListener('paste', handlePaste)\n    }\n  }, [])\n\n  return <PasteData.Provider value={pasteData}>{children}</PasteData.Provider>\n}\n","import Konva from 'konva'\nimport * as React from 'react'\n\ntype StageRefProps = React.RefObject<Konva.Stage> | undefined\nexport const StageRef = React.createContext<StageRefProps>(undefined)\n\nexport const StageRefProvider: React.FC = ({ children }) => {\n  const stageRef = React.useRef<Konva.Stage>(null)\n\n  return <StageRef.Provider value={stageRef}>{children}</StageRef.Provider>\n}\n","import * as React from 'react'\n// import TextField from '@mui/material/TextField'\nimport InputUnstyled from '@mui/base/InputUnstyled'\nimport { styled } from '@mui/system'\nimport { Vector2d } from 'konva/lib/types'\n\nconst StyledInputElement = styled('input')(({ theme }) => ({\n  width: '320px',\n  fontSize: 20,\n  fontWeight: 400,\n  lineHeight: 0,\n  background: 'transparent',\n  borderRadius: '0px',\n  padding: '0px',\n  transition: 'all 150ms ease',\n  border: 'none',\n\n  '&:focus': {\n    outline: 'none',\n    border: `1px solid ${theme.palette.grey[900]}`,\n    borderRadius: '0px',\n  },\n}))\n\ntype EditorOptions = {\n  pos: Vector2d\n  value: string\n}\n\nexport const TextEditorContext = React.createContext<\n  (args: EditorOptions) => Promise<string>\n>(() => {\n  return new Promise<string>((resolve) => {\n    const msg = 'not implemented'\n    console.log(msg)\n    resolve(msg)\n  })\n})\n\nconst initOptions = () => ({\n  pos: { x: 0, y: 0 },\n  value: '',\n})\n\nexport const TextEditorProvider: React.FC = ({ children }) => {\n  const [value, setValue] = React.useState('default')\n  const [options, setOptions] = React.useState<EditorOptions>(initOptions())\n  const [resolveReject, setResolveReject] = React.useState<\n    ((result: string) => void)[]\n  >([])\n  const [resolve, reject] = resolveReject\n\n  const edit = React.useCallback((args: EditorOptions) => {\n    setOptions((prev) => ({ ...prev, ...args }))\n    return new Promise<string>((resolve, reject) => {\n      setResolveReject([resolve, reject])\n    })\n  }, [])\n\n  React.useEffect(() => {\n    setValue(options.value)\n  }, [options])\n\n  const handleClose = React.useCallback(() => {\n    setResolveReject([])\n    setOptions(initOptions())\n  }, [])\n\n  const handleCancel = React.useCallback(() => {\n    if (reject) {\n      reject(value)\n      handleClose()\n    }\n  }, [reject, handleClose, value])\n\n  const inputRef = React.useRef<HTMLInputElement>()\n  const handleComplete = React.useCallback(() => {\n    console.log(inputRef.current?.getBoundingClientRect())\n    if (resolve) {\n      resolve(value)\n      handleClose()\n    }\n  }, [resolve, value, handleClose])\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    if (event.key === 'Enter') {\n      handleComplete()\n    } else if (event.key === 'Escape') {\n      handleCancel()\n    }\n  }\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\n  ) => {\n    setValue(event.target.value)\n  }\n\n  const handleBlur = () => {\n    // When focus is out\n    handleComplete()\n  }\n\n  return (\n    <>\n      <TextEditorContext.Provider value={edit}>\n        {children}\n      </TextEditorContext.Provider>\n      {resolveReject.length > 0 && (\n        <div\n          style={{\n            position: 'absolute',\n            left: options.pos.x - 1,\n            top: options.pos.y - 3,\n          }}>\n          <InputUnstyled\n            autoFocus\n            value={value}\n            placeholder=\"Input Text\"\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onBlur={handleBlur}\n            components={{\n              Input: StyledInputElement,\n            }}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n","import * as React from 'react'\nimport { Text } from 'react-konva'\nimport Konva from 'konva'\nimport { KonvaEventObject } from 'konva/lib/Node'\n\nimport { TextEditorContext } from 'contexts/TextEditorProvider'\nimport { useTheme } from '@mui/material/styles'\n\ntype Props = {\n  point: Konva.Vector2d\n  value?: string\n}\nconst TextBlock = ({ point, value: defaultValue = 'default' }: Props) => {\n  const [value, setValue] = React.useState(defaultValue)\n  const edit = React.useContext(TextEditorContext)\n  const theme = useTheme()\n\n  const handleDoubleClick = (event: KonvaEventObject<MouseEvent>) => {\n    const text = event.target\n    const textPos = text.absolutePosition()\n    const pos = {\n      x: textPos.x + (text.getStage()?.container().offsetLeft || 0),\n      y: textPos.y + (text.getStage()?.container().offsetTop || 0),\n    }\n    text.hide()\n    edit({ pos, value })\n      .then((result) => {\n        setValue(result)\n      })\n      .catch((result) => console.log(result))\n      .finally(() => text.show())\n  }\n\n  return (\n    <Text\n      text={value}\n      fontFamily={theme.typography.fontFamily}\n      fontSize={20}\n      {...point}\n      draggable\n      onDblClick={handleDoubleClick}\n      onClick={(e) => e.evt.preventDefault()}\n    />\n  )\n}\n\nexport default TextBlock\n","import * as React from 'react'\n\nexport const Shapes = ['Rect', 'Circle', 'Line', 'Free'] as const\nexport type Shape = typeof Shapes[number]\nexport type Text = 'Text'\nexport type Select = 'Select'\nexport type Mode = Shape | Text | Select\n\nexport const isShape = (str: string): str is Shape => {\n  return Shapes.some((e) => e === str)\n}\n\ntype ShapeTypeProps = {\n  shapeType: Mode\n  setShapeType: React.Dispatch<React.SetStateAction<Mode>>\n}\nexport const ShapeTypeContext = React.createContext<ShapeTypeProps>({\n  shapeType: 'Select',\n  setShapeType: () => {\n    throw new Error('setShapeType is not implemented by no wrapping')\n  },\n})\nexport const ShapeTypeProvider: React.FC = ({ children }) => {\n  const [shapeType, setShapeType] = React.useState<Mode>('Select')\n\n  return (\n    <ShapeTypeContext.Provider value={{ shapeType, setShapeType }}>\n      {children}\n    </ShapeTypeContext.Provider>\n  )\n}\n","import * as React from 'react'\nimport Konva from 'konva'\n\nconst LineConfigContext = React.createContext<Konva.LineConfig | null>(null)\nconst SetLineConfigContext = React.createContext<React.Dispatch<\n  React.SetStateAction<Konva.LineConfig>\n> | null>(null)\n\nexport const LineConfigProvider: React.FC = ({ children }) => {\n  const [config, setConfig] = React.useState<Konva.LineConfig>({\n    stroke: 'black',\n    strokeWidth: 1,\n  })\n\n  return (\n    <LineConfigContext.Provider value={config}>\n      <SetLineConfigContext.Provider value={setConfig}>\n        {children}\n      </SetLineConfigContext.Provider>\n    </LineConfigContext.Provider>\n  )\n}\n\nexport const useLineConfig = () => {\n  const config = React.useContext(LineConfigContext)\n  const setConfig = React.useContext(SetLineConfigContext)\n\n  if (config === null || setConfig === null) {\n    throw new Error('LineConfigProvider is not wrapped')\n  }\n\n  return [config, setConfig] as const\n}\n","import * as React from 'react'\nimport Konva from 'konva'\n\nconst ShapeConfigContext = React.createContext<Konva.ShapeConfig | null>(null)\nconst SetShapeConfigContext = React.createContext<React.Dispatch<\n  React.SetStateAction<Konva.ShapeConfig>\n> | null>(null)\n\nexport const ShapeConfigProvider: React.FC = ({ children }) => {\n  const [config, setConfig] = React.useState<Konva.ShapeConfig>({})\n\n  return (\n    <ShapeConfigContext.Provider value={config}>\n      <SetShapeConfigContext.Provider value={setConfig}>\n        {children}\n      </SetShapeConfigContext.Provider>\n    </ShapeConfigContext.Provider>\n  )\n}\n\nexport const useShapeConfig = () => {\n  const config = React.useContext(ShapeConfigContext)\n  const setConfig = React.useContext(SetShapeConfigContext)\n\n  if (config === null || setConfig === null) {\n    throw new Error('ShapeConfigProvider is not wrapped')\n  }\n\n  return [config, setConfig] as const\n}\n","import * as React from 'react'\nimport { useList } from 'react-use'\nimport { ListActions } from 'react-use/lib/useList'\n\nconst ShapesContext = React.createContext<React.ReactNodeArray>([])\nconst ShapesActionsContext =\n  React.createContext<ListActions<React.ReactNode> | null>(null)\n\nexport const ShapesProvider: React.FC = ({ children }) => {\n  const [shapes, actions] = useList<React.ReactNode>([])\n\n  return (\n    <ShapesContext.Provider value={shapes}>\n      <ShapesActionsContext.Provider value={actions}>\n        {children}\n      </ShapesActionsContext.Provider>\n    </ShapesContext.Provider>\n  )\n}\n\nexport const useShapes = () => {\n  const shapes = React.useContext(ShapesContext)\n  const actions = React.useContext(ShapesActionsContext)\n\n  if (actions === null) {\n    throw new Error('ShapesContextProvider is not wrapped')\n  }\n\n  return [shapes, actions] as const\n}\n","import * as React from 'react'\nimport {\n  Group,\n  Stage,\n  Layer,\n  Rect,\n  Line,\n  Ellipse,\n  Image as KonvaImage,\n  Transformer,\n} from 'react-konva'\nimport Konva from 'konva'\n\nimport { PasteData } from 'contexts/PasteDataProvider'\nimport { Vector2d } from 'konva/lib/types'\nimport TextBlock from './TextBlock'\nimport { TextEditorContext } from 'contexts/TextEditorProvider'\nimport { StageRef } from 'contexts/StageRefProvider'\nimport { ShapeTypeContext } from 'features/canvas/contexts/ShapeTypeProvider'\nimport { useLineConfig } from 'features/config/contexts/LineConfigProvider'\nimport { useShapeConfig } from 'features/config/contexts/ShapeConfigProvider'\nimport { useShapes } from '../contexts/ShapesProvider'\nimport { Size } from 'features/config/hooks/useCanvasSize'\n\nconst CreateShape = (\n  shape: string,\n  p1: Vector2d,\n  p2: Vector2d,\n  lineConfig: Konva.ShapeConfig = {},\n  optionalConfig: Konva.ShapeConfig = {}\n) => {\n  const handleTransformEnd = (e: Konva.KonvaEventObject<Event>) => {\n    const node = e.target\n\n    const scaleX = node.scaleX()\n    const scaleY = node.scaleY()\n    node.scaleX(1)\n    node.scaleY(1)\n\n    node.width(node.width() * scaleX)\n    node.height(node.height() * scaleY)\n  }\n\n  const config = {\n    draggable: true,\n    ...optionalConfig,\n  }\n\n  switch (shape) {\n    case 'Circle': {\n      const center = {\n        x: (p1.x + p2.x) / 2,\n        y: (p1.y + p2.y) / 2,\n      }\n      const radius = {\n        x: Math.abs(p1.x - p2.x) / 2,\n        y: Math.abs(p1.y - p2.y) / 2,\n      }\n      return (\n        <Ellipse\n          x={center.x}\n          y={center.y}\n          radiusX={radius.x}\n          radiusY={radius.y}\n          fill=\"gray\"\n          stroke=\"blue\"\n          onTransformEnd={handleTransformEnd}\n          {...lineConfig}\n          {...config}\n        />\n      )\n    }\n    case 'Rect': {\n      const leftTop: Vector2d = {\n        x: Math.min(p1.x, p2.x),\n        y: Math.min(p1.y, p2.y),\n      }\n      const widthHeight: Vector2d = {\n        x: Math.abs(p1.x - p2.x),\n        y: Math.abs(p1.y - p2.y),\n      }\n      return (\n        <Rect\n          x={leftTop.x}\n          y={leftTop.y}\n          width={widthHeight.x}\n          height={widthHeight.y}\n          fill=\"gray\"\n          stroke=\"blue\"\n          onTransformEnd={handleTransformEnd}\n          {...lineConfig}\n          {...config}\n        />\n      )\n    }\n    case 'Line':\n      return (\n        <Line\n          points={[p1.x, p1.y, p2.x, p2.y]}\n          stroke=\"blue\"\n          strokeWidth={4}\n          onTransformEnd={handleTransformEnd}\n          {...lineConfig}\n          {...config}\n        />\n      )\n    default:\n      break\n  }\n}\n\nconst DrawFreeLine = (\n  points: number[],\n  lineConfig: Konva.ShapeConfig,\n  config: Konva.ShapeConfig = {\n    draggable: true,\n  }\n) => {\n  return (\n    <Line\n      points={points}\n      mode=\"source-over\"\n      stroke=\"blue\"\n      strokeWidth={4}\n      {...lineConfig}\n      {...config}\n    />\n  )\n}\n\nconst PasteObject = async (data: string | File) => {\n  if (data instanceof File && data.type.startsWith('image')) {\n    const image = await new Promise<HTMLImageElement>((resolve, reject) => {\n      const reader = new FileReader()\n\n      reader.onload = () => {\n        const img = new Image()\n        img.onload = () => {\n          resolve(img)\n        }\n        img.src = reader.result?.toString() || ''\n      }\n      reader.onerror = (error) => reject(error)\n      reader.readAsDataURL(data)\n    })\n\n    const size = {\n      width: image.width,\n      height: image.height,\n    }\n    // Canvas のサイズを超えている場合は、Canvas をはみ出ないサイズに調整\n    // if (Math.max(size.width, size.height) > CANVAS_SIZE) {\n    //   const ratio = size.width / size.height\n    //   size.width = ratio > 1 ? 1 : ratio\n    //   size.height = ratio > 1 ? 1 / ratio : 1\n    // } else {\n    //   size.width /= CANVAS_SIZE\n    //   size.height /= CANVAS_SIZE\n    // }\n\n    return (\n      <KonvaImage\n        image={image}\n        x={0}\n        y={0}\n        width={size.width}\n        height={size.height}\n      />\n    )\n  }\n}\n\ntype Props = {\n  stageSize: Size\n  canvasSize: Size\n}\nexport const Canvas: React.FC<Props> = ({ stageSize, canvasSize }) => {\n  const { shapeType, setShapeType } = React.useContext(ShapeTypeContext)\n  const [newShape, setNewShape] = React.useState<React.ReactNode>()\n  const [start, setStart] = React.useState<Vector2d>({\n    x: 0,\n    y: 0,\n  })\n  const [shapes, shapesActions] = useShapes()\n  const [freePoints, setFreePoints] = React.useState<number[]>([])\n  const pasteData = React.useContext(PasteData)\n  const edit = React.useContext(TextEditorContext)\n  const [absPos, setAbsPos] = React.useState<Vector2d>()\n  const stageRef = React.useContext(StageRef)\n  const transformerRef = React.useRef<Konva.Transformer>(null)\n  const [drawing, setDrawing] = React.useState(false)\n\n  const [lineConfig] = useLineConfig()\n  const [shapeConfig] = useShapeConfig()\n\n  React.useEffect(() => {\n    if (pasteData !== undefined) {\n      const func = async () => {\n        const obj = await PasteObject(pasteData)\n        shapesActions.push(obj)\n      }\n      func()\n    }\n  }, [pasteData, shapesActions])\n\n  const startDrawing = (pos: Vector2d, client: Vector2d) => {\n    if (shapeType === 'Text') {\n      setAbsPos({\n        x: client.x,\n        y: client.y,\n      })\n    } else if (shapeType === 'Free') {\n      setFreePoints((prev) => [pos.x, pos.y, pos.x, pos.y])\n    }\n\n    setDrawing(true)\n    setStart(pos)\n  }\n\n  const handleMouseDown = (event: Konva.KonvaEventObject<MouseEvent>) => {\n    const pos = event.target.getStage()?.getPointerPosition()\n    const { clientX, clientY } = event.evt\n    if (pos) {\n      startDrawing(pos, { x: clientX, y: clientY })\n    }\n  }\n  const handleTouchStart = (event: Konva.KonvaEventObject<TouchEvent>) => {\n    const pos = event.target.getStage()?.getPointerPosition()\n    const { clientX, clientY } = event.evt.touches[0]\n    if (pos) {\n      startDrawing(pos, { x: clientX, y: clientY })\n    }\n\n    event.evt.preventDefault()\n  }\n\n  const handleMouseMove = (\n    event: Konva.KonvaEventObject<MouseEvent | TouchEvent>\n  ) => {\n    const pos = event.target.getStage()?.getPointerPosition()\n    if (pos && drawing) {\n      if (shapeType === 'Free') {\n        setFreePoints((prev) => [...prev, pos.x, pos.y])\n        return\n      }\n\n      const shape = CreateShape(shapeType, start, pos, lineConfig, shapeConfig)\n      setNewShape(shape)\n    }\n\n    event.evt.preventDefault()\n  }\n\n  const handleMouseUp = (\n    event: Konva.KonvaEventObject<MouseEvent | TouchEvent>\n  ) => {\n    if (shapeType === 'Text') {\n      if (absPos && stageRef?.current) {\n        edit({\n          pos: absPos,\n          value: '',\n        }).then((result) => {\n          if (result) {\n            const shape = <TextBlock point={start} value={result} />\n            shapesActions.push(shape)\n          }\n        })\n      }\n    }\n    if (newShape) {\n      shapesActions.push(newShape)\n    }\n    setDrawing(false)\n    setNewShape(undefined)\n    setFreePoints([])\n    setStart({ x: 0, y: 0 })\n    setShapeType('Select')\n\n    event.evt.preventDefault()\n  }\n\n  React.useEffect(() => {\n    if (freePoints.length > 0) {\n      const line = DrawFreeLine(freePoints, lineConfig)\n      setNewShape(line)\n    }\n  }, [freePoints, lineConfig])\n\n  const [background, setBackground] = React.useState<React.ReactNode>()\n\n  React.useEffect(() => {\n    const start = {\n      x: 0,\n      y: 0,\n    }\n    const end = {\n      x: stageSize.width,\n      y: stageSize.height,\n    }\n    const rect = CreateShape(\n      'Rect',\n      start,\n      end,\n      {},\n      {\n        draggable: false,\n        fill: 'white',\n        stroke: 'transparent',\n        listening: false,\n      }\n    )\n\n    const lineStart = {\n      x: stageSize.width / 2,\n      y: 0,\n    }\n    const lineEnd = {\n      x: stageSize.width / 2,\n      y: stageSize.height,\n    }\n    const centerLine = CreateShape('Line', lineStart, lineEnd, {\n      draggable: false,\n      stroke: 'black',\n      strokeWidth: 2,\n      lineJoin: 'round',\n      /*\n       * line segments with a length of 33px\n       * with a gap of 10px\n       */\n      dash: [10, 10],\n      opacity: 0.2,\n    })\n    setBackground(\n      <Group>\n        {rect}\n        {centerLine}\n      </Group>\n    )\n  }, [stageSize.width, stageSize.height])\n\n  const handleClick = (e: Konva.KonvaEventObject<MouseEvent>) => {\n    if (transformerRef.current === null) {\n      return\n    }\n\n    if (shapeType !== 'Select') {\n      return\n    }\n\n    if (e.target === e.target.getStage()) {\n      transformerRef.current.nodes([])\n      return\n    }\n    transformerRef.current.nodes([e.target])\n  }\n\n  const testRef = React.useRef<Konva.Rect>(null)\n  React.useEffect(() => {\n    if (transformerRef.current && testRef.current) {\n      transformerRef.current.nodes([testRef.current])\n    }\n  }, [])\n\n  return (\n    <div style={{ flexGrow: 1 }}>\n      <TextEditorContext.Consumer>\n        {(value) => (\n          <Stage\n            ref={stageRef}\n            preventDefault\n            x={stageSize.x}\n            y={stageSize.y}\n            width={stageSize.width}\n            height={stageSize.height}\n            onMouseDown={handleMouseDown}\n            onTouchStart={handleTouchStart}\n            // Prevent to create a small shape on dragging is started when set Shape type is not \"select\"\n            onDragStart={() => newShape && setNewShape(undefined)}\n            onMouseMove={handleMouseMove}\n            onTouchMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            onTouchEnd={handleMouseUp}\n            onClick={handleClick}\n            onTap={handleClick}>\n            <TextEditorContext.Provider value={value}>\n              <Layer>\n                <Group\n                  clipX={canvasSize.x}\n                  clipY={canvasSize.y}\n                  clipWidth={canvasSize.width}\n                  clipHeight={canvasSize.height}>\n                  {background}\n                  {React.Children.toArray(shapes).map((item) => item)}\n                  {newShape}\n                  <Transformer ref={transformerRef} />\n                </Group>\n              </Layer>\n            </TextEditorContext.Provider>\n          </Stage>\n        )}\n      </TextEditorContext.Consumer>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport Stack from '@mui/material/Stack'\nimport Typography from '@mui/material/Typography'\nimport { ColorResult, CirclePicker } from 'react-color'\n\ntype Props = {\n  color: string\n  setColor: React.Dispatch<React.SetStateAction<string>>\n}\nconst ColorPicker: React.FC<Props> = ({ color, setColor }) => {\n  const handleChangeComplete = (\n    color: ColorResult,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setColor(color.hex)\n  }\n\n  return (\n    <Stack spacing={1}>\n      <Typography>Color: {color}</Typography>\n      <CirclePicker color={color} onChangeComplete={handleChangeComplete} />\n    </Stack>\n  )\n}\n\nexport default ColorPicker\n","import * as React from 'react'\nimport FormControl from '@mui/material/FormControl'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport Stack from '@mui/material/Stack'\nimport Typography from '@mui/material/Typography'\n\nimport { useLineConfig } from 'features/config/contexts/LineConfigProvider'\nimport ColorPicker from 'features/config/components/ColorPicker'\n\nconst LineConfigEditor = () => {\n  const [config, setConfig] = useLineConfig()\n  const [color, setColor] = React.useState(\n    config.stroke?.toString() || '#000000'\n  )\n  const [width, setWidth] = React.useState(config.strokeWidth || 1)\n\n  const handleWidthChange = (e: SelectChangeEvent<number>) => {\n    setWidth(e.target.value as number)\n  }\n\n  React.useEffect(() => {\n    setConfig((prev) => ({\n      ...prev,\n      stroke: color,\n      strokeWidth: width,\n    }))\n  }, [color, setConfig, width])\n\n  return (\n    <Stack spacing={2}>\n      <Stack direction=\"row\">\n        <Typography>Width</Typography>\n        <FormControl>\n          <InputLabel id=\"line-width-label\">line</InputLabel>\n          <Select\n            labelId=\"line-width-label\"\n            id=\"line-width\"\n            value={width}\n            label=\"Line\"\n            onChange={handleWidthChange}>\n            {[1, 2, 3, 4, 5, 6, 7, 8].map((item) => (\n              <MenuItem key={item} value={item}>\n                {item}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Stack>\n      <ColorPicker color={color} setColor={setColor} />\n    </Stack>\n  )\n}\n\nexport default LineConfigEditor\n","import * as React from 'react'\nimport Stack from '@mui/material/Stack'\n\nimport { useShapeConfig } from 'features/config/contexts/ShapeConfigProvider'\nimport ColorPicker from 'features/config/components/ColorPicker'\n\nconst ShapeConfigEditor = () => {\n  const [config, setConfig] = useShapeConfig()\n  const [color, setColor] = React.useState(config.fill || '#000000')\n\n  React.useEffect(() => {\n    setConfig((prev) => ({\n      ...prev,\n      fill: color,\n    }))\n  }, [color, setConfig])\n\n  return (\n    <Stack spacing={2}>\n      <ColorPicker color={color} setColor={setColor} />\n    </Stack>\n  )\n}\n\nexport default ShapeConfigEditor\n","import * as React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Drawer from '@mui/material/Drawer'\nimport Fab from '@mui/material/Fab'\nimport Tab from '@mui/material/Tab'\nimport Tabs from '@mui/material/Tabs'\nimport Toolbar from '@mui/material/Toolbar'\n\nimport LineConfigEditor from '../components/LineConfig'\nimport ShapeConfigEditor from '../components/ShapeConfig'\n\nconst TransparentFab = styled(Fab)(({ theme }) => ({\n  position: 'absolute',\n  top: Number.parseInt(theme.mixins.toolbar.minHeight?.toString() || '0') + 8,\n  right: 8,\n  boxShadow: 'none',\n  backgroundColor: 'transparent',\n  '&:hover': {\n    backgroundColor: 'transparent',\n  },\n  '&:active': {\n    boxShadow: 'none',\n  },\n}))\n\ntype TabPanelProps = {\n  index: number\n  value: number\n}\nconst TabPanel: React.FC<TabPanelProps> = ({ children, index, value }) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}>\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n    </div>\n  )\n}\n\ntype Props = {\n  open?: boolean\n  onClose: () => void\n}\nconst ConfigEditor: React.FC<Props> = ({ open, onClose }) => {\n  const [value, setValue] = React.useState(0)\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue)\n  }\n\n  return (\n    <Drawer open={open} anchor=\"right\" variant=\"persistent\" onClose={onClose}>\n      <Toolbar />\n      <Tabs value={value} onChange={handleChange}>\n        <Tab label=\"Line\" />\n        <Tab label=\"Shape\" />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <LineConfigEditor />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <ShapeConfigEditor />\n      </TabPanel>\n      <TransparentFab\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        variant=\"extended\"\n        onClick={onClose}>\n        <FontAwesomeIcon icon={faTimes} />\n      </TransparentFab>\n    </Drawer>\n  )\n}\n\nexport default ConfigEditor\n","import * as React from 'react'\n\nimport ConfigEditor from 'features/config/components/ConfigEditor'\n\nconst ConfigEditorContext = React.createContext<React.Dispatch<\n  React.SetStateAction<boolean>\n> | null>(null)\n\nexport const ConfigEditorProvider: React.FC = ({ children }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n  return (\n    <>\n      <ConfigEditorContext.Provider value={setOpen}>\n        {children}\n      </ConfigEditorContext.Provider>\n      <ConfigEditor open={open} onClose={handleClose} />\n    </>\n  )\n}\n\nexport const useConfigEditor = () => {\n  const setConfigEditor = React.useContext(ConfigEditorContext)\n  if (setConfigEditor === null) {\n    throw new Error('ConfigEditorProvider is not wrapped')\n  }\n\n  return setConfigEditor\n}\n","import * as React from 'react'\nimport { styled } from '@mui/material'\nimport AppBar from '@mui/material/AppBar'\nimport Button from '@mui/material/Button'\nimport Stack from '@mui/material/Stack'\nimport Toolbar from '@mui/material/Toolbar'\n\nimport { StageRef } from 'contexts/StageRefProvider'\nimport { useConfigEditor } from 'features/config/contexts/ConfigEditorProvider'\nimport { Size } from 'features/config/hooks/useCanvasSize'\n\nconst FlexDiv = styled('div')((theme) => ({\n  flexGrow: 1,\n}))\n\ntype Props = {\n  canvasSize: Size\n}\nconst Navbar: React.FC<Props> = ({ canvasSize }) => {\n  const stageRef = React.useContext(StageRef)\n  const handleDownload = () => {\n    if (stageRef?.current) {\n      const dataUrl = stageRef.current.toDataURL({\n        x: canvasSize.x,\n        y: canvasSize.y,\n        width: canvasSize.width,\n        height: canvasSize.height,\n      })\n      const link = document.createElement('a')\n      link.download = 'stage.png'\n      link.href = dataUrl\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    }\n  }\n\n  const setOpenConfigEditor = useConfigEditor()\n\n  const handleOpenConfigEditor = () => {\n    setOpenConfigEditor(true)\n  }\n\n  return (\n    <AppBar sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n      <Toolbar>\n        <FlexDiv />\n        <Stack direction=\"row\" spacing={2}>\n          <Button variant=\"contained\" onClick={handleOpenConfigEditor}>\n            config\n          </Button>\n          <Button onClick={handleDownload} variant=\"contained\">\n            Download\n          </Button>\n        </Stack>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navbar\n","import * as React from 'react'\nimport Box from '@mui/material/Box'\nimport Button from '@mui/material/Button'\nimport Drawer from '@mui/material/Drawer'\nimport Stack from '@mui/material/Stack'\nimport {\n  Shapes,\n  ShapeTypeContext,\n  isShape,\n} from '../contexts/ShapeTypeProvider'\nimport { useImageLoader } from 'features/canvas/hooks/useImageLoader'\nimport { Size } from 'features/config/hooks/useCanvasSize'\n\ntype ShapePanelsProps = {\n  handleClose: () => void\n}\nconst ShapePanels: React.FC<ShapePanelsProps> = ({ handleClose }) => {\n  const { setShapeType } = React.useContext(ShapeTypeContext)\n  const handleClick = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    if (isShape(event.currentTarget.value)) {\n      setShapeType(event.currentTarget.value)\n    }\n    handleClose()\n  }\n\n  return (\n    <Stack direction=\"row\" spacing={2}>\n      {Shapes.map((shape) => (\n        <Button key={shape} onClick={handleClick} value={shape}>\n          {shape}\n        </Button>\n      ))}\n    </Stack>\n  )\n}\n\ntype ToolPanelProps = {\n  canvasSize: Size\n}\nconst ToolPanel: React.FC<ToolPanelProps> = ({ canvasSize }) => {\n  const [openSub, setOpenSub] = React.useState(false)\n  const mainPanelRef = React.useRef<HTMLDivElement>(null)\n  const { setShapeType } = React.useContext(ShapeTypeContext)\n  const loadImage = useImageLoader()\n\n  const handleUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(e.target.files || [])\n    if (files.length > 0) {\n      files.forEach((file) => {\n        loadImage(file, canvasSize.height, canvasSize.width)\n      })\n    }\n  }\n\n  const handleTextClicked = () => {\n    setShapeType('Text')\n  }\n\n  const handleOpen = () => {\n    setOpenSub(true)\n  }\n  const handleClose = () => {\n    setOpenSub(false)\n  }\n\n  return (\n    <>\n      <Box\n        ref={mainPanelRef}\n        sx={{ width: '100vw', zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n        <Box\n          sx={{\n            width: '100%',\n            overflow: 'auto',\n          }}>\n          <Stack direction=\"row\" spacing={2}>\n            <Button onClick={handleOpen}>Shape</Button>\n            <Button onClick={handleTextClicked}>Text</Button>\n            <Button component=\"label\">\n              <input\n                accept=\"image/*\"\n                multiple\n                type=\"file\"\n                style={{ display: 'none' }}\n                onChange={handleUpload}\n              />\n              Upload\n            </Button>\n          </Stack>\n        </Box>\n      </Box>\n      <Drawer open={openSub} onClose={handleClose} anchor=\"bottom\">\n        <ShapePanels handleClose={handleClose} />\n        <Box sx={{ height: mainPanelRef.current?.clientHeight }}></Box>\n      </Drawer>\n    </>\n  )\n}\n\nexport default ToolPanel\n","import * as React from 'react'\nimport { Image as KonvaImage } from 'react-konva'\n\nimport { useShapes } from '../contexts/ShapesProvider'\n\nexport const useImageLoader = () => {\n  const [, actions] = useShapes()\n\n  const handleLoad = React.useCallback(async (src: string) => {\n    return await new Promise<HTMLImageElement>((resolve, reject) => {\n      const img = new window.Image()\n      img.src = src\n\n      img.onload = () => {\n        resolve(img)\n      }\n      img.onerror = reject\n    })\n  }, [])\n\n  const pushImage = React.useCallback(\n    (image: HTMLImageElement, height: number, width: number) => {\n      const size = {\n        width: image.width,\n        height: image.height,\n      }\n      const maxHeight = height * 0.6\n      const maxWidth = width * 0.6\n      // 最大サイズを超えている場合は、はみ出ないサイズに調整\n      if (size.width > maxWidth || size.height > maxHeight) {\n        if (size.width > size.height) {\n          size.height = (maxWidth * size.height) / size.width\n          size.width = maxWidth\n        } else {\n          size.width = (maxHeight * size.width) / size.height\n          size.height = maxHeight\n        }\n      }\n\n      actions.push(\n        <KonvaImage\n          draggable\n          image={image}\n          // TODO: キャンバスサイズから描画位置を計算しているが、\n          // x, y は Stage 座標に変換する必要がある\n          x={(width - size.width) / 2}\n          y={(height - size.height) / 2}\n          width={size.width}\n          height={size.height}\n        />\n      )\n    },\n    [actions]\n  )\n\n  const loadImage = React.useCallback(\n    async (file: File, height: number, width: number) => {\n      const url = URL.createObjectURL(file)\n      if (url) {\n        const image = await handleLoad(url)\n        pushImage(image, height, width)\n      }\n      URL.revokeObjectURL(url)\n    },\n    [handleLoad, pushImage]\n  )\n\n  return loadImage\n}\n","import * as React from 'react'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\n\nimport { Canvas } from 'features/canvas/components/Canvas'\nimport Navbar from 'features/canvas/components/Navbar'\nimport ToolPanel from 'features/canvas/components/ToolPanel'\nimport { useCanvasSize } from 'features/config/hooks/useCanvasSize'\n\nconst Root = () => {\n  const canvasBoxRef = React.useRef<HTMLDivElement>(null)\n  const { stage: stageSize, canvas: canvasSize } = useCanvasSize(canvasBoxRef)\n\n  return (\n    <Box\n      sx={{\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        flex: 1,\n        position: 'relative',\n      }}>\n      <Navbar canvasSize={canvasSize} />\n      <Toolbar />\n      <Box\n        sx={{\n          background: 'grey',\n          height: '100%',\n          width: '100%',\n          position: 'relative',\n          flex: '1 1 0%',\n        }}>\n        <Box\n          ref={canvasBoxRef}\n          onCopy={() => console.log('handlePaste')}\n          onPaste={() => console.log('test')}\n          sx={{\n            position: 'absolute',\n            height: '100%',\n            width: '100%',\n            overflow: 'hidden auto',\n          }}>\n          <Canvas stageSize={stageSize} canvasSize={canvasSize} />\n        </Box>\n      </Box>\n      <ToolPanel canvasSize={canvasSize} />\n    </Box>\n  )\n}\n\nexport default Root\n","import * as React from 'react'\n\nimport { useWindowSize } from 'react-use'\n\nconst MARGIN_MAG = 0.9\n\nexport type Size = {\n  x: number\n  y: number\n  width: number\n  height: number\n}\nexport type CanvasSize = {\n  stage: Size\n  canvas: Size\n}\nexport const useCanvasSize = (\n  container: React.RefObject<HTMLDivElement>\n): CanvasSize => {\n  const windowSize = useWindowSize()\n\n  const [canvasSize, setCanvasSize] = React.useState<CanvasSize>({\n    stage: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n    },\n    canvas: {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n    },\n  })\n\n  React.useEffect(() => {\n    if (!container.current) {\n      return\n    }\n    const stageWidth = container.current.clientWidth\n    const stageHeight = container?.current.clientHeight\n\n    const stage: Size = {\n      x: 0,\n      y: 0,\n      width: stageWidth,\n      height: stageHeight,\n    }\n    const canvas: Size = {\n      width: 0,\n      height: 0,\n      x: 0,\n      y: 0,\n    }\n\n    const widthHeight = 22 / 21\n\n    // Width / Height の小さい方に合わせてサイズを決める\n    canvas.width = stageWidth * MARGIN_MAG\n    canvas.height = canvas.width / widthHeight\n    if (canvas.height > stageHeight * MARGIN_MAG) {\n      canvas.height = stageHeight * MARGIN_MAG\n      canvas.width = canvas.height * widthHeight\n    }\n\n    canvas.x = (stageWidth - canvas.width) / 2\n    canvas.y = (stageHeight - canvas.height) / 2\n    setCanvasSize({ stage, canvas })\n  }, [container, windowSize.height, windowSize.width])\n\n  return canvasSize\n}\n","import * as React from 'react'\n\nimport { ConfigEditorProvider } from './ConfigEditorProvider'\nimport { LineConfigProvider } from './LineConfigProvider'\nimport { ShapeConfigProvider } from './ShapeConfigProvider'\n\nexport const ConfigProvider: React.FC = ({ children }) => {\n  return (\n    <LineConfigProvider>\n      <ShapeConfigProvider>\n        {/* Config Editor Provider must be wrapped other config provider to use each ConfigProvider's Context in ConfigEditor  */}\n        <ConfigEditorProvider>{children}</ConfigEditorProvider>\n      </ShapeConfigProvider>\n    </LineConfigProvider>\n  )\n}\n","import * as React from 'react'\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\n\nimport { PasteDataProvider } from 'contexts/PasteDataProvider'\nimport { StageRefProvider } from 'contexts/StageRefProvider'\nimport { TextEditorProvider } from 'contexts/TextEditorProvider'\nimport Root from 'pages/Root'\nimport { ConfigProvider } from 'features/config/contexts/ConfigProvider'\nimport { ShapesProvider } from 'features/canvas/contexts/ShapesProvider'\nimport { ShapeTypeProvider } from 'features/canvas/contexts/ShapeTypeProvider'\n\nconst customTheme = createTheme()\n\nfunction App() {\n  return (\n    <div style={{ height: '100%' }}>\n      <ThemeProvider theme={customTheme}>\n        <PasteDataProvider>\n          <StageRefProvider>\n            <TextEditorProvider>\n              <ConfigProvider>\n                <ShapesProvider>\n                  <ShapeTypeProvider>\n                    <Root />\n                  </ShapeTypeProvider>\n                </ShapesProvider>\n              </ConfigProvider>\n            </TextEditorProvider>\n          </StageRefProvider>\n        </PasteDataProvider>\n      </ThemeProvider>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}